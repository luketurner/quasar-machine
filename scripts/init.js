// Generated by CoffeeScript 1.7.1
(function() {
  require(["builders/debugWireframes", "builders/accretionDisk", "builders/lightPillar", "builders/starField", "config"], function(debugWireframes, accretionDisk, lightPillar, starField, config) {
    var init, initCamera, initControls, initRenderer, initScene, initStats;
    initCamera = function() {
      var camera;
      camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 4000);
      camera.position.z = 50;
      return camera;
    };
    initRenderer = function() {
      var renderer;
      renderer = new THREE.WebGLRenderer();
      renderer.setSize(window.innerWidth, window.innerHeight);
      document.body.appendChild(renderer.domElement);
      return renderer;
    };
    initControls = function(camera, element, onChange) {
      var controls;
      controls = new THREE.TrackballControls(camera, element);
      controls.rotateSpeed = 1.0;
      controls.zoomSpeed = 1.2;
      controls.panSpeed = 0.8;
      controls.noZoom = false;
      controls.noPan = false;
      controls.staticMoving = true;
      controls.dynamicDampingFactor = 0.3;
      controls.keys = [65, 83, 68];
      controls.addEventListener('change', onChange);
      return controls;
    };
    initStats = function() {
      var stats;
      stats = new Stats;
      stats.setMode(0);
      stats.domElement.style.position = 'absolute';
      stats.domElement.style.left = '0px';
      stats.domElement.style.top = '0px';
      document.body.appendChild(stats.domElement);
      return stats;
    };
    initScene = function(settings) {
      var scene;
      scene = new THREE.Scene();
      scene.add(debugWireframes(settings));
      scene.add(accretionDisk(settings));
      scene.add(lightPillar(settings));
      scene.add(starField(settings));
      return scene;
    };
    init = function() {
      var animate, camera, controls, render, renderer, scene, stats;
      stats = initStats();
      scene = initScene(config.settings);
      camera = initCamera();
      renderer = initRenderer();
      render = function() {
        return renderer.render(scene, camera);
      };
      controls = initControls(camera, renderer.domElement, render);
      animate = function() {
        stats.begin();
        requestAnimationFrame(animate);
        controls.update();
        return stats.end();
      };
      render();
      return animate();
    };
    return init();
  });

}).call(this);

//# sourceMappingURL=init.map
