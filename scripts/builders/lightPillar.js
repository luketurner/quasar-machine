// Generated by CoffeeScript 1.7.1
(function() {
  define(function() {
    var beam, build, cylinder, debugWireframe;
    debugWireframe = function(radius, height) {
      var geometry, material;
      geometry = new THREE.CylinderGeometry(radius, radius, height, 5, 1, true);
      material = new THREE.MeshBasicMaterial({
        color: 0xff0000,
        wireframe: true
      });
      return new THREE.Mesh(geometry, material);
    };
    cylinder = function(radius, height, color, opacity) {
      var geometry, material;
      geometry = new THREE.CylinderGeometry(radius, radius, height, 32);
      material = new THREE.MeshBasicMaterial({
        color: color,
        transparent: true,
        opacity: opacity
      });
      return new THREE.Mesh(geometry, material);
    };
    beam = function(scene, radius, height, steps, stepSize, color, opacity, spread) {
      var x, xtrans, ytrans, _results;
      opacity = opacity / steps;
      xtrans = THREE.Math.randFloatSpread(spread);
      ytrans = THREE.Math.randFloatSpread(spread);
      _results = [];
      while (steps -= 1) {
        x = cylinder(radius, height, color, opacity);
        x.translateX(xtrans);
        x.translateZ(ytrans);
        scene.add(x);
        _results.push(radius -= stepSize);
      }
      return _results;
    };
    build = function(scene, settings) {
      var heightFactor, n;
      n = settings.num_beams;
      while (n -= 1) {
        heightFactor = THREE.Math.randFloat(1, 4);
        beam(scene, 0.1, Math.pow(heightFactor, 3), 2, 0.05, 0xffaa22, 0.05, 4 - heightFactor);
      }
      if (settings.show_wireframe) {
        scene.add(debugWireframe(1, 25));
        return scene.add(debugWireframe(0.5, 45));
      }
    };
    return build;
  });

}).call(this);

//# sourceMappingURL=lightPillar.map
